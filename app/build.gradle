apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

androidExtensions {
    experimental = true
}

//---------------------- Versioning
def getVersionProperty(String variableName, int defaultValue) {
    def versioningPropsFile = rootProject.file('versioning.properties')
    if (versioningPropsFile.canRead()) {
        def versioningProps = new Properties()
        versioningProps.load(versioningPropsFile.newDataInputStream())

        String propertiesVariable = versioningProps[variableName]
        if (propertiesVariable != null) {
            return Integer.parseInt(propertiesVariable)
        } else {
            return defaultValue
        }
    } else {
        throw new GradleException("Could not read versioning.properties!, make sure file is present")
    }
}

def getVersionMajor() {
    return getVersionProperty('VERSION_MAJOR', 1)
}

def getVersionMinor() {
    return getVersionProperty('VERSION_MINOR', 0)
}

def getVersionPatch() {
    return getVersionProperty('VERSION_PATCH', 0)
}

def generateVersionCode() {
    return MINIMUM_SDK_VERSION.toInteger() * 10000000 + getVersionMajor() * 10000 + getVersionMinor() * 100 + getVersionPatch()
}

def generateVersionName() {
    return "${getVersionMajor()}.${getVersionMinor()}.${getVersionPatch()}"
}

task version {
    group 'destinationsApp'
    description 'generates the VersionCode and VersionName for the app'
    doLast {
        println "Current version:"
        println "Version code: ${generateVersionCode()}"
        println "Version name: ${generateVersionName()}"
    }
}

//--------------------- Signing
def mSigningProps = new Properties()
def signingPropsFile = rootProject.file('signing.properties')
if (signingPropsFile.canRead()) {
    mSigningProps.load(signingPropsFile.newDataInputStream())
} else {
    throw new GradleException("Could not read signing.properties!, make sure file is present")
}

task releasePassword {
    group 'destinationsapp'
    description 'Reads the KeyStore Password for the app release'
    doLast {
        println "Store Password: ${mSigningProps['STORE_PASSWORD']}"
        println "Key Password: ${mSigningProps['KEY_PASSWORD']}"
    }
}

android {
    compileSdkVersion COMPILE_SDK_VERSION.toInteger()
    signingConfigs {
        release {
            storeFile rootProject.file('DestinationsApp.jks')
            storePassword mSigningProps['STORE_PASSWORD']
            keyAlias mSigningProps['KEY_ALIAS']
            keyPassword mSigningProps['KEY_PASSWORD']
        }
    }
    defaultConfig {
        applicationId "com.allow.destinationsapp"
        minSdkVersion MINIMUM_SDK_VERSION.toInteger()
        targetSdkVersion TARGET_SDK_VERSION.toInteger()
        versionCode generateVersionCode()
        versionName generateVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        resConfigs "en"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "DestinationsApp-${variant.name}-${generateVersionName()}.apk"
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha02'
    implementation 'androidx.core:core-ktx:1.1.0-alpha04'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.2-alpha01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.2-alpha01'
    implementation 'com.android.volley:volley:1.1.0'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0-alpha02'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'joda-time:joda-time:2.10.1'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
}
